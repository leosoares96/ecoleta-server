
// Rota: endereço compleo da requisição
// Recurso: entidade que estamos acessando no sistema

// GET: buscar informações do backend
// POST: criar uma informação no backend
// PUT: atualizar uma informação do backend
// DELETE: deletar uma informação do backend

// request.params: parâmetros que vem na propria rota e identifica um recurso
// request.body: parâmetros para criação e atualização de informações
// request.query parâmetros que vemna propria rota, geralmente opcionais pra filtros, paginação,..

// começar o projeto node
npm init -y

// intalação do express para gerenciar rotas
npm install express
npm install @types/express -D

// instalações do typescript
npm install ts-node -D
npm install typescript -D

// arquivo de config do typescript
npx tsc --init

// atualiza ao salvar as alterações
npm install ts-node-dev -D

// executar typescript
npx ts-node src/server.ts
npx ts-node-dev src/server.ts

// knex para fazer Query em qualquer bd
npm install knex

// instalação do banco de dados sqllite3
npm install sqllite3

// Migration: histórico do banco de dados
// A ordem da criação das migrations será a ordem de execução. 
// Método up realiza a criação da tabela
// Método down realiza o rollback da operação


// executa as migrations pra criar as tabelas
npx knex migrate:latest --knexfile knexfile.ts migrate:latest

// instalar o cors pra definir qual dominio pode acessar a aplicação
npm install cors
npm install @types/cors -D

// upload de imagens
npm install multer
npm install @types/multer